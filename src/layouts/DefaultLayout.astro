---
import "../stylesheet/main.scss";

import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
---

<html lang="fr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Directus Astro Example</title>
    <link rel="shortcut icon" href="/favicon.ico" />
  </head>

  <body class="layout">
    <Header />
    <div class="my-container">
      <main class="page taches">
        <div class="taches">
          <slot />
          <Footer />
        </div>
      </main>
    </div>
  </body>
</html>

<script>
  import ASScroll from "@ashthornton/asscroll";
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { CustomEase } from "gsap/CustomEase";

  gsap.registerPlugin(ScrollTrigger, CustomEase);

  const isTouch = "ontouchstart" in document.documentElement;

  const pageElement: HTMLElement = document.querySelector(
    ".page"
  ) as HTMLElement;
  const containerElement: HTMLElement = document.querySelector(
    ".my-container"
  ) as HTMLElement;

  const asscroll = new ASScroll({
    containerElement: containerElement,
    scrollElements: pageElement,
    touchScrollType: "scrollTop",
    limitLerpRate: true,
    disableRaf: true,
  });
  //use the raf of gsap
  gsap.ticker.add(asscroll.update);

  ScrollTrigger.defaults({
    scroller: asscroll.containerElement,
  });

  ScrollTrigger.scrollerProxy(asscroll.containerElement, {
    scrollTop(value) {
      return arguments.length
        ? (asscroll.currentPos = value)
        : asscroll.currentPos;
    },
    getBoundingClientRect() {
      return {
        top: 0,
        left: 0,
        width: window.innerWidth,
        height: window.innerHeight,
      };
    },
  });

  asscroll.on("update", ScrollTrigger.update);
  ScrollTrigger.addEventListener("refresh", asscroll.resize);

  function toggleClasses(elmt: HTMLElement) {
    const attribute = elmt.attributes["is-inview"].value;
    // const classes = attribute.replace(/\s/g, ",");
    // const classToAdd = `'inview','${classes}'`;
    // console.log(classToAdd);

    elmt.classList.add("inview", attribute);
  }

  window.addEventListener("load", () => {
    const totalScroll = asscroll.containerElement.scrollHeight - innerHeight;
    var ease1 = CustomEase.create("ease1", "0.165, 0.84, 0.44, 1");
    var ease2 = CustomEase.create("ease2", "0.22, 1, 0.36, 1");

    gsap.to(".cadre", {
      scrollTrigger: {
        pin: false,
        scrub: 0.2,
        trigger: ".parallax",
        start: "top 95%",
        end: "bottom top",
      },
      y: (i, target) => -totalScroll * target.dataset.speed,
      ease: "none",
    });
    console.log(document.querySelectorAll("div[is-inview]"));

    const elements: string[] = gsap.utils.toArray("[is-inview]");
    elements.forEach((elmt: string) => {
      gsap.to(elmt, {
        scrollTrigger: {
          trigger: elmt,
          start: "top 100%",
          end: "top top",
          onEnter: (elmt) => toggleClasses(elmt.trigger),
          once: true,
        },
      });
    });
    gsap.from(".pageTitle", {
      y: "100%",
      opacity: "0",
      duration: 0.8,
      delay: (i, target) => target.dataset.delay,
      ease: "ease2",
    });

    asscroll.enable();
  });
  // cubic-bezier(0.22, 1, 0.36, 1)

  window.addEventListener("resize", () => {
    const width = window.innerWidth;
    const height = window.innerHeight;
    asscroll.resize({ width, height });
  });
</script>

<style lang="scss">
  .taches {
    background-image: url("/images/GRAIN.png");
  }
  .page {
    background-image: url("/images/fond-test-accueil.png");
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }
</style>
