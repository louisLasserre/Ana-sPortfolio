---
interface Props {
  images: {
    src: string;
    alt?: string;
  }[];
  columns: number;
  mobileColumns?: number;
  rowGap?: number;
  columnGap?: number;
  container?: string;
}

const {
  images,
  columns = 3,
  mobileColumns = columns,
  rowGap = 1,
  columnGap = 1,
  container = "container-small",
} = Astro.props;
---

<section class={`section ${container}`}>
  <div class="grid">
    {
      images.map((img, index) => (
        <div class="imgContainer" is-inview="fromB" data-delay={index / 10}>
          <img src={img.src} alt={img.alt ? img.alt : ""} />
        </div>
      ))
    }
  </div>
</section>

<style
  lang="scss"
  define:vars={{
    columns,
    mobileColumns,
    rowGap: `${rowGap}rem`,
    columnGap: `${columnGap}rem`,
  }}
>
  @import "../stylesheet/main.scss";

  .section {
    margin-top: 6rem;
    .grid {
      display: grid;
      grid-template-columns: repeat(var(--columns), 1fr);
      row-gap: var(--rowGap);
      column-gap: var(--columnGap);

      @media (max-width: $to_small) {
        grid-template-columns: repeat(var(--mobileColumns), 1fr);
      }

      .imgContainer {
        width: 100%;
        /*aspect-ratio: 16/9;*/

        img {
          width: 100%;
          object-fit: cover;
        }
      }
    }
  }
</style>
